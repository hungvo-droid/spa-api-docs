{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"api_documentation.html","title":"SPA Customer Service API Documentation","text":"<p>This document provides details for all API endpoints in the SPA Customer Service application.</p>"},{"location":"api_documentation.html#application-endpoints","title":"Application Endpoints","text":""},{"location":"api_documentation.html#list-applications","title":"List Applications","text":"<p>Endpoint: <code>GET /list-apps</code> Description: List all available applications Input Schema: No parameters required Output Schema: Array of strings <pre><code>[\n  \"string\"\n]\n</code></pre> Status Codes: - <code>200 OK</code>: Successfully retrieved applications list</p>"},{"location":"api_documentation.html#list-sessions","title":"List Sessions","text":"<p>Endpoint: <code>GET /apps/{app_name}/users/{user_id}/sessions</code> Description: List all sessions for a specific user and application Input Schema: Path parameters - <code>app_name</code> (string, required): Name of the application - <code>user_id</code> (string, required): ID of the user</p> <p>Output Schema: Array of session objects <pre><code>[session_object]\n</code></pre> Status Codes: - <code>200 OK</code>: Successfully retrieved sessions list - <code>403 Forbidden</code>: Not authorized to access these sessions - <code>404 Not Found</code>: User or application not found</p>"},{"location":"api_documentation.html#create-session","title":"Create Session","text":"<p>Endpoint: <code>POST /apps/{app_name}/users/{user_id}/sessions</code> Description: Create a new session with an auto-generated ID Input Schema:  - Path parameters:   - <code>app_name</code> (string, required): Name of the application   - <code>user_id</code> (string, required): ID of the user</p> <ul> <li>Request Body: <pre><code>session_object\n</code></pre></li> </ul> <p>Output Schema: Same as the Get Session response</p> <p>Status Codes: - <code>200 OK</code>: Successfully created session - <code>400 Bad Request</code>: Invalid request parameters - <code>403 Forbidden</code>: Not authorized to create a session</p>"},{"location":"api_documentation.html#get-session-with-session_id","title":"Get Session with session_id","text":"<p>Endpoint: <code>GET /apps/{app_name}/users/{user_id}/sessions/{session_id}</code> Description: Retrieve a specific session by ID Input Schema: Path parameters - <code>app_name</code> (string, required): Name of the application - <code>user_id</code> (string, required): ID of the user - <code>session_id</code> (string, required): ID of the session to retrieve</p> <p>Output Schema: Session object <pre><code>session_object\n</code></pre> Status Codes: - <code>200 OK</code>: Successfully retrieved session - <code>404 Not Found</code>: Session not found - <code>403 Forbidden</code>: Not authorized to access this session</p> <p>The data we use: To get the text of the n-th event in the chat: <code>text = session[\"events\"][n][\"content\"][\"parts\"][0][\"text\"]</code></p>"},{"location":"api_documentation.html#create-session-with-id","title":"Create Session With ID","text":"<p>Endpoint: <code>POST /apps/{app_name}/users/{user_id}/sessions/{session_id}</code> Description: Create a new session with a specified ID Input Schema:  - Path parameters:   - <code>app_name</code> (string, required): Name of the application   - <code>user_id</code> (string, required): ID of the user   - <code>session_id</code> (string, required): Desired ID for the new session</p> <ul> <li>Request Body: Output Schema: Session object <pre><code>session_object\n</code></pre></li> </ul> <p>Output Schema: Same as the Get Session response</p> <p>Status Codes: - <code>200 OK</code>: Successfully created session - <code>400 Bad Request</code>: Invalid request parameters - <code>403 Forbidden</code>: Not authorized to create a session - <code>409 Conflict</code>: Session ID already exists</p>"},{"location":"api_documentation.html#delete-session","title":"Delete Session","text":"<p>Endpoint: <code>DELETE /apps/{app_name}/users/{user_id}/sessions/{session_id}</code> Description: Delete a specific session by ID Input Schema: Path parameters - <code>app_name</code> (string, required): Name of the application - <code>user_id</code> (string, required): ID of the user - <code>session_id</code> (string, required): ID of the session to delete</p> <p>Output Schema: <pre><code>\"string\"\n</code></pre></p> <p>Status Codes: - <code>200 OK</code>: Successfully deleted session - <code>404 Not Found</code>: Session not found - <code>403 Forbidden</code>: Not authorized to delete this session</p>"},{"location":"api_documentation.html#authentication-endpoints","title":"Authentication Endpoints","text":""},{"location":"api_documentation.html#register-user","title":"Register User","text":"<p>Endpoint: <code>POST /register</code> Description: Register a new user in the system Input Schema: <code>UserCreate</code> <pre><code>{\n  \"email\": \"string (valid email format)\",\n  \"full_name\": \"string (min length: 3)\",\n  \"password\": \"string (min length: 8)\"\n}\n</code></pre> Output Schema: <code>UserResponse</code> <pre><code>{\n  \"user_id\": \"string (UUID format)\",\n  \"email\": \"string (valid email format)\",\n  \"full_name\": \"string\"\n}\n</code></pre> Status Codes: - <code>200 OK</code>: Successfully registered - <code>400 Bad Request</code>: Email already registered - <code>500 Internal Server Error</code>: Database error</p>"},{"location":"api_documentation.html#login-user","title":"Login User","text":"<p>Endpoint: <code>POST /login</code> Description: Authenticate a user and receive a JWT token Input Schema: <code>UserLogin</code> <pre><code>{\n  \"email\": \"string (valid email format)\",\n  \"password\": \"string\"\n}\n</code></pre> Output Schema: <code>Token</code> <pre><code>{\n  \"access_token\": \"string (JWT format)\",\n  \"token_type\": \"string (always 'bearer')\"\n}\n</code></pre> Status Codes: - <code>200 OK</code>: Successfully authenticated - <code>401 Unauthorized</code>: Incorrect email or password</p>"},{"location":"api_documentation.html#run-with-server-sent-events","title":"Run with Server-Sent Events","text":"<p>Endpoint: <code>POST /run_sse</code> Description: Standard-compatible endpoint that matches the ADK API format, supporting both streaming and non-streaming responses. Get the response from Agent LLM  Input Schema: <code>RunRequest</code> <pre><code>{\n  \"app_name\": \"string\",\n  \"user_id\": \"string\",\n  \"session_id\": \"string\",\n  \"new_message\": {\n    \"role\": \"string (usually 'user')\",\n    \"parts\": [\n      {\n        \"text\": \"string\"\n      }\n    ]\n  },\n  \"streaming\": \"boolean (default: false)\"\n}\n</code></pre> Output (Streaming): Server-Sent Events stream (Content-Type: text/event-stream) <pre><code>data: {\"output\": \"string\", \"is_final\": false}\n\ndata: {\"output\": \"string\", \"is_final\": true}\n\ndata: [DONE]\n</code></pre></p> <p>Output Schema (Non-Streaming): <pre><code>{\n  \"output\": \"string\"\n}\n</code></pre> Status Codes: - <code>200 OK</code>: Successfully processed - <code>400 Bad Request</code>: Invalid message format - <code>500 Internal Server Error</code>: Processing error</p>"},{"location":"api_documentation.html#authentication","title":"Authentication","text":"<p>Most endpoints require authentication using a JWT token. Include the token in the Authorization header:</p> <pre><code>Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\n</code></pre> <p>The token is obtained from the <code>/login</code> endpoint and expires after 24 hours (JWT_EXPIRATION_MINUTES = 1440). </p>"},{"location":"api_documentation.html#data-models","title":"Data Models","text":""},{"location":"api_documentation.html#session-object","title":"Session Object","text":"<p>The Session object represents a conversation session between a user and the customer support agent. It contains the following fields:</p> <pre><code>{\n  \"id\": \"string\",                 // Unique identifier for the session\n  \"appName\": \"string\",            // Name of the application\n  \"userId\": \"string\",             // ID of the user who owns the session\n  \"state\": {                      // Session state data\n    \"additionalProp1\": {}         // Custom state properties\n  },\n  \"events\": [                     // Array of events in the session\n    {\n      \"content\": {                // Content of the event\n        \"parts\": [                // Parts that make up the content\n          {\n            \"videoMetadata\": {    // Metadata for video content\n              \"fps\": 0,\n              \"endOffset\": \"string\",\n              \"startOffset\": \"string\"\n            },\n            \"thought\": true,      // Whether this part is a thought (internal reasoning)\n            \"inlineData\": {       // Inline data like images\n              \"displayName\": \"string\",\n              \"data\": \"string\",\n              \"mimeType\": \"string\"\n            },\n            \"fileData\": {         // File attachment data\n              \"displayName\": \"string\",\n              \"fileUri\": \"string\",\n              \"mimeType\": \"string\"\n            },\n            \"thoughtSignature\": \"string\",\n            \"codeExecutionResult\": {  // Results of code execution\n              \"outcome\": \"OUTCOME_UNSPECIFIED\",\n              \"output\": \"string\"\n            },\n            \"executableCode\": {    // Code that can be executed\n              \"code\": \"string\",\n              \"language\": \"LANGUAGE_UNSPECIFIED\"\n            },\n            \"functionCall\": {      // Function call details\n              \"id\": \"string\",\n              \"args\": {\n                \"additionalProp1\": {}\n              },\n              \"name\": \"string\"\n            },\n            \"functionResponse\": {   // Response from function calls\n              \"willContinue\": true,\n              \"scheduling\": \"SCHEDULING_UNSPECIFIED\",\n              \"id\": \"string\",\n              \"name\": \"string\",\n              \"response\": {\n                \"additionalProp1\": {}\n              }\n            },\n            \"text\": \"string\"        // Plain text content\n          }\n        ],\n        \"role\": \"string\"           // Role of the content creator (user/assistant)\n      },\n      \"groundingMetadata\": {       // Metadata for grounding information\n        \"groundingChunks\": [       // Chunks of information used for grounding\n          {\n            \"retrievedContext\": {\n              \"ragChunk\": {\n                \"pageSpan\": {\n                  \"firstPage\": 0,\n                  \"lastPage\": 0\n                },\n                \"text\": \"string\"\n              },\n              \"text\": \"string\",\n              \"title\": \"string\",\n              \"uri\": \"string\"\n            },\n            \"web\": {\n              \"domain\": \"string\",\n              \"title\": \"string\",\n              \"uri\": \"string\"\n            }\n          }\n        ],\n        \"groundingSupports\": [     // Support information for grounding\n          {\n            \"confidenceScores\": [\n              0\n            ],\n            \"groundingChunkIndices\": [\n              0\n            ],\n            \"segment\": {\n              \"endIndex\": 0,\n              \"partIndex\": 0,\n              \"startIndex\": 0,\n              \"text\": \"string\"\n            }\n          }\n        ],\n        \"retrievalMetadata\": {\n          \"googleSearchDynamicRetrievalScore\": 0\n        },\n        \"retrievalQueries\": [\n          \"string\"\n        ],\n        \"searchEntryPoint\": {\n          \"renderedContent\": \"string\",\n          \"sdkBlob\": \"string\"\n        },\n        \"webSearchQueries\": [\n          \"string\"\n        ]\n      },\n      \"partial\": true,            // Whether this is a partial event\n      \"turnComplete\": true,       // Whether this turn is complete\n      \"errorCode\": \"string\",      // Error code if applicable\n      \"errorMessage\": \"string\",   // Error message if applicable\n      \"interrupted\": true,        // Whether this event was interrupted\n      \"customMetadata\": {         // Custom metadata\n        \"additionalProp1\": {}\n      },\n      \"usageMetadata\": {          // Usage statistics\n        \"cacheTokensDetails\": [\n          {\n            \"modality\": \"MODALITY_UNSPECIFIED\",\n            \"tokenCount\": 0\n          }\n        ],\n        \"cachedContentTokenCount\": 0,\n        \"candidatesTokenCount\": 0,\n        \"candidatesTokensDetails\": [\n          {\n            \"modality\": \"MODALITY_UNSPECIFIED\",\n            \"tokenCount\": 0\n          }\n        ],\n        \"promptTokenCount\": 0,\n        \"promptTokensDetails\": [\n          {\n            \"modality\": \"MODALITY_UNSPECIFIED\",\n            \"tokenCount\": 0\n          }\n        ],\n        \"thoughtsTokenCount\": 0,\n        \"toolUsePromptTokenCount\": 0,\n        \"toolUsePromptTokensDetails\": [\n          {\n            \"modality\": \"MODALITY_UNSPECIFIED\",\n            \"tokenCount\": 0\n          }\n        ],\n        \"totalTokenCount\": 0,\n        \"trafficType\": \"TRAFFIC_TYPE_UNSPECIFIED\"\n      },\n      \"invocationId\": \"\",         // ID of the invocation\n      \"author\": \"string\",         // Author of the event\n      \"actions\": {                // Actions associated with the event\n        \"skipSummarization\": true,\n        \"stateDelta\": {\n          \"additionalProp1\": {}\n        },\n        \"artifactDelta\": {\n          \"additionalProp1\": 0,\n          \"additionalProp2\": 0,\n          \"additionalProp3\": 0\n        },\n        \"transferToAgent\": \"string\",\n        \"escalate\": true,\n        \"requestedAuthConfigs\": {\n          \"additionalProp1\": {\n            \"authScheme\": {\n              \"type\": \"apiKey\",\n              \"description\": \"string\",\n              \"in\": \"query\",\n              \"name\": \"string\",\n              \"additionalProp1\": {}\n            },\n            \"rawAuthCredential\": {\n              \"authType\": \"apiKey\",\n              \"resourceRef\": \"string\",\n              \"apiKey\": \"string\",\n              \"http\": {\n                \"scheme\": \"string\",\n                \"credentials\": {\n                  \"username\": \"string\",\n                  \"password\": \"string\",\n                  \"token\": \"string\",\n                  \"additionalProp1\": {}\n                },\n                \"additionalProp1\": {}\n              },\n              \"serviceAccount\": {\n                \"serviceAccountCredential\": {\n                  \"type\": \"\",\n                  \"projectId\": \"string\",\n                  \"privateKeyId\": \"string\",\n                  \"privateKey\": \"string\",\n                  \"clientEmail\": \"string\",\n                  \"clientId\": \"string\",\n                  \"authUri\": \"string\",\n                  \"tokenUri\": \"string\",\n                  \"authProviderX509CertUrl\": \"string\",\n                  \"clientX509CertUrl\": \"string\",\n                  \"universeDomain\": \"string\",\n                  \"additionalProp1\": {}\n                },\n                \"scopes\": [\n                  \"string\"\n                ],\n                \"useDefaultCredential\": false,\n                \"additionalProp1\": {}\n              },\n              \"oauth2\": {\n                \"clientId\": \"string\",\n                \"clientSecret\": \"string\",\n                \"authUri\": \"string\",\n                \"state\": \"string\",\n                \"redirectUri\": \"string\",\n                \"authResponseUri\": \"string\",\n                \"authCode\": \"string\",\n                \"accessToken\": \"string\",\n                \"refreshToken\": \"string\",\n                \"additionalProp1\": {}\n              },\n              \"additionalProp1\": {}\n            },\n            \"exchangedAuthCredential\": {\n              \"authType\": \"apiKey\",\n              \"resourceRef\": \"string\",\n              \"apiKey\": \"string\",\n              \"http\": {\n                \"scheme\": \"string\",\n                \"credentials\": {\n                  \"username\": \"string\",\n                  \"password\": \"string\",\n                  \"token\": \"string\",\n                  \"additionalProp1\": {}\n                },\n                \"additionalProp1\": {}\n              },\n              \"serviceAccount\": {\n                \"serviceAccountCredential\": {\n                  \"type\": \"\",\n                  \"projectId\": \"string\",\n                  \"privateKeyId\": \"string\",\n                  \"privateKey\": \"string\",\n                  \"clientEmail\": \"string\",\n                  \"clientId\": \"string\",\n                  \"authUri\": \"string\",\n                  \"tokenUri\": \"string\",\n                  \"authProviderX509CertUrl\": \"string\",\n                  \"clientX509CertUrl\": \"string\",\n                  \"universeDomain\": \"string\",\n                  \"additionalProp1\": {}\n                },\n                \"scopes\": [\n                  \"string\"\n                ],\n                \"useDefaultCredential\": false,\n                \"additionalProp1\": {}\n              },\n              \"oauth2\": {\n                \"clientId\": \"string\",\n                \"clientSecret\": \"string\",\n                \"authUri\": \"string\",\n                \"state\": \"string\",\n                \"redirectUri\": \"string\",\n                \"authResponseUri\": \"string\",\n                \"authCode\": \"string\",\n                \"accessToken\": \"string\",\n                \"refreshToken\": \"string\",\n                \"additionalProp1\": {}\n              },\n              \"additionalProp1\": {}\n            },\n            \"additionalProp1\": {}\n          }\n        }\n      },\n      \"longRunningToolIds\": [     // IDs of long-running tools\n        \"string\"\n      ],\n      \"branch\": \"string\",         // Branch information\n      \"id\": \"\",                   // Event ID\n      \"timestamp\": 0              // Event timestamp\n    }\n  ],\n  \"lastUpdateTime\": 0             // Last update timestamp\n}\n</code></pre>"}]}